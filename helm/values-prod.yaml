replicaCount: 1

image:
  repository: 1234567.dkr.ecr.amazonaws.com/app1/auth-service
  pullPolicy: Always
  # tag: "latest"

namespace: "setup"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "vault-auth-service"

pod:
  enabled: true
  annotations:
      vault.hashicorp.com/agent-inject: "true"
      vault.hashicorp.com/agent-inject-status: "update"
      vault.hashicorp.com/agent-init-first: "true"
      vault.hashicorp.com/role: "authz"
      vault.hashicorp.com/agent-requests-cpu: 100m
      vault.hashicorp.com/agent-pre-populate-only: "true"
      vault.hashicorp.com/agent-inject-template-secrets: |
        {{- with secret "project1/app/secrets" -}}
          {{ .Data.key }}
        {{- end }}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  orchestratorsvc:
    type: ClusterIP
    grpcPort: 9051
    restPort: 9900
    baseroute: /api/v1
  authz:
    disable: false
env:
  grpcHostAddr: localhost
  grpcHostPort: 50052
  kafkaExampleTopic: auth-svc.example
  kafkaGroupID: auth-svc
  kafkaPartitions: 1
  kafkaReplicas: 1
  kafkaBootstrapServers: auth-kafka:19092
  kafkaSslMode: false
  debugMode: true
  deployMode: prod
  logLevel: debug
  

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
